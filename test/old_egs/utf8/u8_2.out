I N R -- V 2.1.0b, modified Jan 28 2022
Copyright (C) 1988 J Howard Johnson
Distributed under GPLv3 (see COPYING)



# ======================================================================
#  B1: A binary digit is either a one or a two represented by 0 and 1.
#  C1: Copy a digit from input to output.

B1 -----------------   DFA MIN States: 3      Trans: 3      Tapes: 1  Strg: 1 K
C1 -----------------   DFA MIN States: 5      Trans: 5      Tapes: 2  Strg: 2 K

# ======================================================================
# Handle special cases for each of 5 types of UTF-8 bytes.
# Input is a 21-bit string representing the Unicode code point.
# Output is a sequence of 1 to 4 8-bit bytes all as a bit string.

# Ascii: High order 14 bits are zero. Copy low order 7 bits with a
#   0 added in front.
# Extra_6: Copy 6 bits to output with a leading '10' to signal a
#   UTF-8 continuation octet.
# Bits_11: High order 10 bits are zero; remaining 11 bits are split
#   into 5 and 6. The first 5 go into the first output octet preceded
#   by '110'. The remaining 6 go into a continuation octet.
# Bits_16: High order 5 bits are zero; remaining 16 bits are split
#   into 4, 6 and 6. The first 4 go into the first output octet preceded
#   by '1110'. The remaining 12 go into two continuation octets.
# Bits_21: The 21 bits are split into 3, and three sequences of 6 bits.
#   The first 3 go into the first output octet preceded by '11110'.
#   The remaining 18 go into three continuation octets.
#   2^21                    = 2097152  Full 21 bits
#   2^20 + 2^16             = 1114112  0 to 0x10FFFF
#   2^20 + 2^16 - 2^11      = 1112064  subtract surrogate support
#   2^20 + 2^16 - 2^11 - 66 = 1111998  subtract non-characters

Ascii --------------   DFA MIN States: 38     Trans: 44     Tapes: 2  Strg: 3 K
Extra_6 ------------   DFA MIN States: 22     Trans: 27     Tapes: 2  Strg: 2 K
Bits_11 ------------   DFA MIN States: 50     Trans: 60     Tapes: 2  Strg: 3 K
Bits_16 ------------   DFA MIN States: 63     Trans: 78     Tapes: 2  Strg: 3 K
Bits_21 ------------   DFA MIN States: 76     Trans: 96     Tapes: 2  Strg: 4 K

# ======================================================================
# Combine special cases into a code point to UTF-8 converter.
# Input is a 21-bit string representing the Unicode code point.
# Output is a sequence of 1 to 4 8-bit bytes all as a bit string.

# Unicode21: Convert a Unicode code point by applying one of the
#   4 conversion methods defined above. The one providing the shortest
#   output is to be used.

Unicode21__UTF8_base   DFA MIN States: 124    Trans: 158    Tapes: 2  Strg: 6 K
37 states in subsequential transducer
UTF8__Unicode21_base   DFA MIN States: 124    Trans: 158    Tapes: 2  Strg: 4 K
52 states in subsequential transducer
#
# ======================================================================
# Unicode code points are integer values between 0 and 0x10FFFF.
# Input is a 21-bit string representing the Unicode code point.

# If the high order bit is 1, then the next four bits must be 0.
# Input is a 21-bit string representing the Unicode code point.
# Domain_base: contains all values from 0 upto 0x10FFFF.

Domain_base --------   DFA MIN States: 27     Trans: 47     Tapes: 1  Strg: 2 K
1114112 words

# ======================================================================
# Remove illegal code points from the Domain.
# Input is a 21-bit string representing the Unicode code point.

# UTF-16 uses a range of Unicode code points between 0xD800 and 0xDCFF
#   to encode the upper 10 bits (0xD800-0xDBFF) and the lower 10 bits
#   (0xDC00-0xDFFF). As a result, and to allow conversions between
#   transfer formats, we have to remove these ranges.

# from Wikipedia page about UTF-16 encoding:
# U' = yyyyyyyyyyxxxxxxxxxx  // U - 0x10000
# W1 = 110110yyyyyyyyyy      // 0xD800 + yyyyyyyyyy
# W2 = 110111xxxxxxxxxx      // 0xDC00 + xxxxxxxxxx

# Surrogate: 5 zeros followed by the pattern '11011' followed by
#   11 bits (1 bit to signal higher of lower plus 10 bits to encode the
#   value of the surrogate)

Surrogate ----------   DFA MIN States: 23     Trans: 33     Tapes: 1  Strg: 2 K
Domain -------------   DFA MIN States: 35     Trans: 62     Tapes: 1  Strg: 2 K
1112064 words


Unicode21__UTF8 ----   DFA MIN States: 141    Trans: 177    Tapes: 2  Strg: 7 K
44 states in subsequential transducer
UTF8__Unicode21 ----   DFA MIN States: 141    Trans: 177    Tapes: 2  Strg: 7 K
63 states in subsequential transducer

# ======================================================================
# There are some other code points that are not to be used.
# Input is a 21-bit string representing the Unicode code point.

# (1) The following code points are non-characters in every plane:
#   0xFFFE 0xFFFF (34 code points)

# (2) The range U+FDD0 to U+FDEF are also non-characters (32 code points).
#  from  1111 1101 1101 0000
#    to  1111 1101 1110 1111

# These code points are not removed from the domain:
# Unicode Corrigendum #9: Clarification About Noncharacters
#   states that these should not be censored from input or output

NonChars1 ----------   DFA MIN States: 27     Trans: 32     Tapes: 1  Strg: 2 K
NonChars2 ----------   DFA MIN States: 24     Trans: 28     Tapes: 1  Strg: 2 K
NonCharacters ------   DFA MIN States: 46     Trans: 59     Tapes: 1  Strg: 2 K
Domain_strict ------   DFA MIN States: 59     Trans: 107    Tapes: 1  Strg: 3 K
1111998 words

# ======================================================================
# Define Range directly and painfully

# (1) Ensure shortest output form is used by avoiding leading 0's.
# (2) For surrogates avoid '11011' pattern at beginning of 16-bit forms.
# (3) If 21-bit form starting with 1, '0000' must follow.
# This is particularly challenging if constraint spills over into the
#   first continuation octet.

# Theory shows that all use of negative constructions can be avoided
#   but at the cost of a bit of pain.

B2 -----------------   DFA MIN States: 4      Trans: 5      Tapes: 1  Strg: 1 K
B3 -----------------   DFA MIN States: 5      Trans: 7      Tapes: 1  Strg: 1 K
B4 -----------------   DFA MIN States: 6      Trans: 9      Tapes: 1  Strg: 1 K
B5 -----------------   DFA MIN States: 7      Trans: 11     Tapes: 1  Strg: 1 K
B6 -----------------   DFA MIN States: 8      Trans: 13     Tapes: 1  Strg: 1 K
B7 -----------------   DFA MIN States: 9      Trans: 15     Tapes: 1  Strg: 1 K

# NZ_2 = B2 - '00';
# NZ_4 = B4 - '0000';
# NSZ4 = B4 - '0000' - '1101';

NZ_2 ---------------   DFA MIN States: 5      Trans: 6      Tapes: 1  Strg: 1 K
NZ_4 ---------------   DFA MIN States: 9      Trans: 14     Tapes: 1  Strg: 2 K
NSZ4 ---------------   DFA MIN States: 11     Trans: 17     Tapes: 1  Strg: 2 K
Range_Ascii --------   DFA MIN States: 10     Trans: 16     Tapes: 1  Strg: 1 K
RE_6 ---------------   DFA MIN States: 10     Trans: 15     Tapes: 1  Strg: 1 K
Range_Bits_11 ------   DFA MIN States: 21     Trans: 33     Tapes: 1  Strg: 2 K
Range_Bits_16 ------   DFA MIN States: 37     Trans: 57     Tapes: 1  Strg: 3 K
Range_Bits_21 ------   DFA MIN States: 45     Trans: 67     Tapes: 1  Strg: 3 K
Range1 -------------   DFA MIN States: 63     Trans: 99     Tapes: 1  Strg: 4 K
Range --------------   DFA MIN States: 63     Trans: 99     Tapes: 1  Strg: 4 K
  Empty Automaton



# ======================================================================

Base_16 ------------   DFA MIN States: 33     Trans: 47     Tapes: 2  Strg: 5 K
Hex__Bits ----------   DFA MIN States: 32     Trans: 47     Tapes: 2  Strg: 4 K
Bits__Hex ----------   DFA MIN States: 32     Trans: 47     Tapes: 2  Strg: 4 K
UnicodeHex6__UTF8Hex   DFA MIN States: 121    Trans: 236    Tapes: 2  Strg: 7 K
16 states in subsequential transducer
UTF8Hex__UnicodeHex6   DFA MIN States: 121    Trans: 236    Tapes: 2  Strg: 7 K
24 states in subsequential transducer

# ======================================================================

Hex1 ---------------   DFA MIN States: 3      Trans: 17     Tapes: 1  Strg: 2 K
CopyHex1 -----------   DFA MIN States: 19     Trans: 33     Tapes: 2  Strg: 5 K
UnicodeHex6__UniHex    DFA MIN States: 110    Trans: 214    Tapes: 2  Strg: 11 K
10 states in subsequential transducer
UniHex__UnicodeHex6    DFA MIN States: 110    Trans: 214    Tapes: 2  Strg: 7 K

# UniHex__UnicodeHex6   :prsseq UniHex__UnicodeHex6.sseq;
# yields an explosion of states since a subsequential transducer
# is forced to remember everything until it sees or can infer the
# length of the input.
# SHORT == unsigned short  *** V_insert: Table FULL ***
# SHORT == int             *** S_morecore: Out of Memory ***

# ======================================================================
