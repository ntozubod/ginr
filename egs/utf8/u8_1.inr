
Digit = { 0, 1 };

Copy1 = Digit $ ( 0, 0 );
Copy2 = Copy1 Copy1;
Copy3 = Copy2 Copy1;
Copy4 = Copy3 Copy1;
Copy5 = Copy4 Copy1;
Copy6 = Copy5 Copy1;
Copy7 = Copy6 Copy1;

Copy_Mark = ( '|', '|' );

# ==================================================

Ascii   = ( 0 :14 , 0 )         Copy7;
Extra_6 = (       , 1 0 )       Copy6;
Bits_11 = ( 0 :10 , 1 1 0 )     Copy5 Extra_6;
Bits_16 = ( 0 :5  , 1 1 1 0 )   Copy4 Extra_6 Extra_6;
Bits_21 = (       , 1 1 1 1 0 ) Copy3 Extra_6 Extra_6 Extra_6;

Ascii_sseq = Ascii :sseq;
Bits_11_sseq = Bits_11 :sseq;
Bits_16_sseq = Bits_16 :sseq;
Bits_21_sseq = Bits_21 :sseq;

Utf8b = Ascii || Bits_11 || Bits_16 || Bits_21;
Utf8b_sseq = Utf8b :sseq;

Domain = ( 0 ( Digit :20 ) ) | ( '10000' ( Digit :16 ) );
Utf8 = ( 0 :3 ) ( Domain @@ Utf8b );
Utf8I = Utf8 $ ( 1, 0 );

Utf8_sseq = Utf8 :sseq;
Utf8I_sseq = Utf8I :sseq;

# ==================================================

B04 = {
  ( 0, '00' ), ( 1, '01' ), ( 2, '10' ), ( 3, '11' ) };

B04I = B04 $ ( 1, 0 );

Utf8_B04 = B04* @ Utf8 @ B04I*;
Utf8_B04I = Utf8_B04 $ ( 1, 0 );

Utf8_B04_sseq = Utf8_B04 :sseq;
Utf8_B04I_sseq = Utf8_B04I :sseq;

# ==================================================

B08 = {
  ( 0, '000' ), ( 1, '001' ), ( 2, '010' ), ( 3, '011' ),
  ( 4, '100' ), ( 5, '101' ), ( 6, '110' ), ( 7, '111' ) };

B08I = B08 $ ( 1, 0 );

Utf8_B08 = B08* @ Utf8 @ B04I*;
Utf8_B08I = Utf8_B08 $ ( 1, 0 );
Utf8_B08I $ 0 :enum;

Utf8_B08_sseq = Utf8_B08 :sseq;
Utf8_B08I_sseq = Utf8_B08I :sseq;

# ==================================================

B16 = {
  ( 0, '0000' ), ( 1, '0001' ), ( 2, '0010' ), ( 3, '0011' ),
  ( 4, '0100' ), ( 5, '0101' ), ( 6, '0110' ), ( 7, '0111' ),
  ( 8, '1000' ), ( 9, '1001' ), ( a, '1010' ), ( b, '1011' ),
  ( c, '1100' ), ( d, '1101' ), ( e, '1110' ), ( f, '1111' ) };

B16I = B16 $ ( 1, 0 );

Utf8_B16 = B16* @ Utf8 @ B16I*;
Utf8_B16I = Utf8_B16 $ ( 1, 0 );

Utf8_B16_sseq = Utf8_B16 :sseq;
Utf8_B16I_sseq = Utf8_B16I :sseq;

# ==================================================

(       '36' @ Utf8_B16I ) :enum;
(     'c6a5' @ Utf8_B16I ) :enum;
(   'e6a5a5' @ Utf8_B16I ) :enum;
( 'f2a5a5a5' @ Utf8_B16I ) :enum;

Utf8  :prsseq F_B02.sseq;
Utf8I :prsseq B_B02.sseq;
Utf8 @ Utf8I :prsseq I_B02.sseq;

Utf8_B04  :prsseq F_B04.sseq;
Utf8_B04I :prsseq B_B04.sseq;
Utf8_B04 @ Utf8_B04I :prsseq I_B04.sseq;

Utf8_B08  :prsseq F_B08.sseq;
Utf8_B08I :prsseq B_B08.sseq;
Utf8_B08 @ Utf8_B08I :prsseq I_B08.sseq;

Utf8_B16  :prsseq F_B16.sseq;
Utf8_B16I :prsseq B_B16.sseq;
Utf8_B16 @ Utf8_B16I :prsseq I_B16.sseq;

# ==================================================

Byte_B16 = {
( `00`, 0 0 ), ( `01`, 0 1 ), ( `02`, 0 2 ), ( `03`, 0 3 ), 
( `04`, 0 4 ), ( `05`, 0 5 ), ( `06`, 0 6 ), ( `07`, 0 7 ), 
( `08`, 0 8 ), ( `09`, 0 9 ), ( `0a`, 0 a ), ( `0b`, 0 b ), 
( `0c`, 0 c ), ( `0d`, 0 d ), ( `0e`, 0 e ), ( `0f`, 0 f ), 
( `10`, 1 0 ), ( `11`, 1 1 ), ( `12`, 1 2 ), ( `13`, 1 3 ), 
( `14`, 1 4 ), ( `15`, 1 5 ), ( `16`, 1 6 ), ( `17`, 1 7 ), 
( `18`, 1 8 ), ( `19`, 1 9 ), ( `1a`, 1 a ), ( `1b`, 1 b ), 
( `1c`, 1 c ), ( `1d`, 1 d ), ( `1e`, 1 e ), ( `1f`, 1 f ), 
( `20`, 2 0 ), ( `21`, 2 1 ), ( `22`, 2 2 ), ( `23`, 2 3 ), 
( `24`, 2 4 ), ( `25`, 2 5 ), ( `26`, 2 6 ), ( `27`, 2 7 ), 
( `28`, 2 8 ), ( `29`, 2 9 ), ( `2a`, 2 a ), ( `2b`, 2 b ), 
( `2c`, 2 c ), ( `2d`, 2 d ), ( `2e`, 2 e ), ( `2f`, 2 f ), 
( `30`, 3 0 ), ( `31`, 3 1 ), ( `32`, 3 2 ), ( `33`, 3 3 ), 
( `34`, 3 4 ), ( `35`, 3 5 ), ( `36`, 3 6 ), ( `37`, 3 7 ), 
( `38`, 3 8 ), ( `39`, 3 9 ), ( `3a`, 3 a ), ( `3b`, 3 b ), 
( `3c`, 3 c ), ( `3d`, 3 d ), ( `3e`, 3 e ), ( `3f`, 3 f ), 
( `40`, 4 0 ), ( `41`, 4 1 ), ( `42`, 4 2 ), ( `43`, 4 3 ), 
( `44`, 4 4 ), ( `45`, 4 5 ), ( `46`, 4 6 ), ( `47`, 4 7 ), 
( `48`, 4 8 ), ( `49`, 4 9 ), ( `4a`, 4 a ), ( `4b`, 4 b ), 
( `4c`, 4 c ), ( `4d`, 4 d ), ( `4e`, 4 e ), ( `4f`, 4 f ), 
( `50`, 5 0 ), ( `51`, 5 1 ), ( `52`, 5 2 ), ( `53`, 5 3 ), 
( `54`, 5 4 ), ( `55`, 5 5 ), ( `56`, 5 6 ), ( `57`, 5 7 ), 
( `58`, 5 8 ), ( `59`, 5 9 ), ( `5a`, 5 a ), ( `5b`, 5 b ), 
( `5c`, 5 c ), ( `5d`, 5 d ), ( `5e`, 5 e ), ( `5f`, 5 f ), 
( `60`, 6 0 ), ( `61`, 6 1 ), ( `62`, 6 2 ), ( `63`, 6 3 ), 
( `64`, 6 4 ), ( `65`, 6 5 ), ( `66`, 6 6 ), ( `67`, 6 7 ), 
( `68`, 6 8 ), ( `69`, 6 9 ), ( `6a`, 6 a ), ( `6b`, 6 b ), 
( `6c`, 6 c ), ( `6d`, 6 d ), ( `6e`, 6 e ), ( `6f`, 6 f ), 
( `70`, 7 0 ), ( `71`, 7 1 ), ( `72`, 7 2 ), ( `73`, 7 3 ), 
( `74`, 7 4 ), ( `75`, 7 5 ), ( `76`, 7 6 ), ( `77`, 7 7 ), 
( `78`, 7 8 ), ( `79`, 7 9 ), ( `7a`, 7 a ), ( `7b`, 7 b ), 
( `7c`, 7 c ), ( `7d`, 7 d ), ( `7e`, 7 e ), ( `7f`, 7 f ), 
( `80`, 8 0 ), ( `81`, 8 1 ), ( `82`, 8 2 ), ( `83`, 8 3 ), 
( `84`, 8 4 ), ( `85`, 8 5 ), ( `86`, 8 6 ), ( `87`, 8 7 ), 
( `88`, 8 8 ), ( `89`, 8 9 ), ( `8a`, 8 a ), ( `8b`, 8 b ), 
( `8c`, 8 c ), ( `8d`, 8 d ), ( `8e`, 8 e ), ( `8f`, 8 f ), 
( `90`, 9 0 ), ( `91`, 9 1 ), ( `92`, 9 2 ), ( `93`, 9 3 ), 
( `94`, 9 4 ), ( `95`, 9 5 ), ( `96`, 9 6 ), ( `97`, 9 7 ), 
( `98`, 9 8 ), ( `99`, 9 9 ), ( `9a`, 9 a ), ( `9b`, 9 b ), 
( `9c`, 9 c ), ( `9d`, 9 d ), ( `9e`, 9 e ), ( `9f`, 9 f ), 
( `a0`, a 0 ), ( `a1`, a 1 ), ( `a2`, a 2 ), ( `a3`, a 3 ), 
( `a4`, a 4 ), ( `a5`, a 5 ), ( `a6`, a 6 ), ( `a7`, a 7 ), 
( `a8`, a 8 ), ( `a9`, a 9 ), ( `aa`, a a ), ( `ab`, a b ), 
( `ac`, a c ), ( `ad`, a d ), ( `ae`, a e ), ( `af`, a f ), 
( `b0`, b 0 ), ( `b1`, b 1 ), ( `b2`, b 2 ), ( `b3`, b 3 ), 
( `b4`, b 4 ), ( `b5`, b 5 ), ( `b6`, b 6 ), ( `b7`, b 7 ), 
( `b8`, b 8 ), ( `b9`, b 9 ), ( `ba`, b a ), ( `bb`, b b ), 
( `bc`, b c ), ( `bd`, b d ), ( `be`, b e ), ( `bf`, b f ), 
( `c0`, c 0 ), ( `c1`, c 1 ), ( `c2`, c 2 ), ( `c3`, c 3 ), 
( `c4`, c 4 ), ( `c5`, c 5 ), ( `c6`, c 6 ), ( `c7`, c 7 ), 
( `c8`, c 8 ), ( `c9`, c 9 ), ( `ca`, c a ), ( `cb`, c b ), 
( `cc`, c c ), ( `cd`, c d ), ( `ce`, c e ), ( `cf`, c f ), 
( `d0`, d 0 ), ( `d1`, d 1 ), ( `d2`, d 2 ), ( `d3`, d 3 ), 
( `d4`, d 4 ), ( `d5`, d 5 ), ( `d6`, d 6 ), ( `d7`, d 7 ), 
( `d8`, d 8 ), ( `d9`, d 9 ), ( `da`, d a ), ( `db`, d b ), 
( `dc`, d c ), ( `dd`, d d ), ( `de`, d e ), ( `df`, d f ), 
( `e0`, e 0 ), ( `e1`, e 1 ), ( `e2`, e 2 ), ( `e3`, e 3 ), 
( `e4`, e 4 ), ( `e5`, e 5 ), ( `e6`, e 6 ), ( `e7`, e 7 ), 
( `e8`, e 8 ), ( `e9`, e 9 ), ( `ea`, e a ), ( `eb`, e b ), 
( `ec`, e c ), ( `ed`, e d ), ( `ee`, e e ), ( `ef`, e f ), 
( `f0`, f 0 ), ( `f1`, f 1 ), ( `f2`, f 2 ), ( `f3`, f 3 ), 
( `f4`, f 4 ), ( `f5`, f 5 ), ( `f6`, f 6 ), ( `f7`, f 7 ), 
( `f8`, f 8 ), ( `f9`, f 9 ), ( `fa`, f a ), ( `fb`, f b ), 
( `fc`, f c ), ( `fd`, f d ), ( `fe`, f e ), ( `ff`, f f ) };
